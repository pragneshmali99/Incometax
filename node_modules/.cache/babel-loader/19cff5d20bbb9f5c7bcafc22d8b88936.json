{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/pragnesh/Smis/DemoExample/webcam/src/Bothindialog.js\";\nimport React, { Component } from 'react'; // import React from 'react';\n\nimport './App.css';\nimport Webcam from \"react-webcam\";\nimport Popup from \"reactjs-popup\";\nimport * as firebase from 'firebase'; //------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = typeof window !== 'undefined' && (window.SpeechRecognition || window.webkitSpeechRecognition);\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'hi-IN';\nlet stopCmd;\nlet database;\nlet dbimage;\nlet imageSrc;\nlet myrecorded; // function storeDemo () {\n//     console.log(\"Yes IN FUNCTION\")\n//     dbimage\n//     .set(imageSrc)\n//     .then(success => {\n//        console.log(\"Yes successs\")\n//       })\n//         .catch(err => {\n//           console.log(err);\n//         //   showMessage(\"Some error occurred\");\n//         });\n// }\n\nclass Bothindialog extends React.Component {\n  // -----------Speech--------------\n  constructor() {\n    super();\n\n    this.setRef = webcam => {\n      this.webcam = webcam;\n    };\n\n    this.capture = () => {\n      imageSrc = this.webcam.getScreenshot(); // alert(imageSrc);\n\n      myrecorded = stopCmd;\n      console.log(\"LETS THE CHECK LISTNER :: \", myrecorded);\n      console.log(\"LETS THE CHECK Image :: \", imageSrc); // writeUserData(email,fname,lname) {\n      //     // database = firebase.database();\n      //     firebase.database().ref('incometax-111d6/').push({\n      //         image,\n      //         speech\n      //     }).then((data)=>{\n      //         //success callback\n      //         console.log('data ' , data)\n      //     }).catch((error)=>{\n      //         //error callback\n      //         console.log('error ' , error)\n      //     })\n      // }\n      // image = [\"image\"]\n\n      var complainData = {\n        image: imageSrc // speech:myrecorded\n        // description:this.authForm.value.description,\n\n      };\n      database = firebase.database();\n      dbimage = database.ref(\"incometax-111d6\");\n      console.log(\"MY DB IMAGE :: \", dbimage);\n      dbimage.push(complainData).then(val => {\n        console.log(\"val\", val);\n        console.log(\"Sccess data\"); // this.navCtrl.push(ComplaintPage);\n      }); // dbimage.push(\"value\", snap => {\n      //     // const val = snap.val();\n      //     console.log(\"IN B\")\n      //     storeDemo();\n      // });\n      // dbimage.then((data)=>{\n      //     //success callback\n      //     console.log('data ' , data)\n      // }).catch((error)=>{\n      //     //error callback\n      //     console.log('error ' , error)\n      // })\n    };\n\n    this.state = {\n      listening: false\n    };\n    this.toggleListen = this.toggleListen.bind(this);\n    this.handleListen = this.handleListen.bind(this);\n  }\n\n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen);\n  }\n\n  componentDidMount() {\n    this.toggleListen();\n  }\n\n  handleListen() {\n    console.log('listening?', this.state.listening);\n\n    if (this.state.listening) {\n      recognition.start();\n\n      recognition.onend = () => {\n        console.log(\"...continue listening...\");\n        recognition.start();\n      };\n    } else {\n      recognition.stop();\n\n      recognition.onend = () => {\n        console.log(\"Stopped listening per click\");\n      };\n    }\n\n    recognition.onstart = () => {\n      console.log(\"Listening!\");\n    };\n\n    let finalTranscript = '';\n\n    recognition.onresult = event => {\n      // let interimTranscript = ''\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) finalTranscript += transcript + ' '; // else interimTranscript += transcript;\n      } // document.getElementById('interim').innerHTML = interimTranscript\n\n\n      document.getElementById('final').innerHTML = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n      const transcriptArr = finalTranscript.split(' ');\n      stopCmd = transcriptArr.slice(-3, -1);\n      console.log('stopCmd', stopCmd);\n\n      if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n        recognition.stop();\n\n        recognition.onend = () => {\n          console.log('Stopped listening per command');\n          const finalText = transcriptArr.slice(0, -3).join(' ');\n          document.getElementById('final').innerHTML = finalText;\n        };\n\n        console.log(\"FINAL TEXT ::\", finalText);\n      }\n    }; //-----------------------------------------------------------------------\n\n\n    recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error);\n    };\n  } //---------------------------------IMAGE CAPTURE----------------------------------------------\n\n\n  // genrateIncometax (){\n  //     const imageSrc = this.webcam.getScreenshot();\n  //     const mylistner =  this.state.listening;\n  //     console.log(\"LETS THE CHECK LISTNER :: \", mylistner);\n  //     alert(imageSrc);\n  // }\n  render() {\n    const videoConstraints = {\n      width: 1280,\n      height: 1000,\n      facingMode: \"user\"\n    };\n    return React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"popup_inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Webcam, {\n      audio: false,\n      height: 250,\n      ref: this.setRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 250,\n      videoConstraints: videoConstraints,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"final\",\n      style: final,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.capture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Capture photo\")))));\n  }\n\n}\n\nexport default Bothindialog; //-------------------------CSS------------------------------------\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: '1em',\n    width: '380px',\n    height: '50px'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'lightblue',\n    borderRadius: '50%',\n    margin: '6em 0 2em 0'\n  },\n  interim: {\n    color: 'gray',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n};\nconst container = styles.container,\n      button = styles.button,\n      interim = styles.interim,\n      final = styles.final;","map":{"version":3,"sources":["/home/pragnesh/Smis/DemoExample/webcam/src/Bothindialog.js"],"names":["React","Component","Webcam","Popup","firebase","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","stopCmd","database","dbimage","imageSrc","myrecorded","Bothindialog","constructor","setRef","webcam","capture","getScreenshot","console","log","complainData","image","ref","push","then","val","state","listening","toggleListen","bind","handleListen","setState","componentDidMount","start","onend","stop","onstart","finalTranscript","onresult","event","i","resultIndex","results","length","transcript","isFinal","document","getElementById","innerHTML","transcriptArr","split","slice","finalText","join","onerror","error","render","videoConstraints","width","height","facingMode","container","final","styles","display","flexDirection","alignItems","textAlign","padding","button","background","borderRadius","margin","interim","color","border"],"mappings":"AAAA;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CAEA;;AAEA,MAAMC,iBAAiB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,KAAmCA,MAAM,CAACD,iBAAP,IAA4BC,MAAM,CAACC,uBAAtE,CAA1B;AACA,MAAMC,WAAW,GAAG,IAAIH,iBAAJ,EAApB;AACAG,WAAW,CAACC,SAAZ,GAAwB,IAAxB;AACAD,WAAW,CAACE,cAAZ,GAA6B,IAA7B;AACAF,WAAW,CAACG,IAAZ,GAAmB,OAAnB;AAEA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,UAAJ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAN,SAA2BjB,KAAK,CAACC,SAAjC,CAA2C;AACvC;AACAiB,EAAAA,WAAW,GAAG;AACV;;AADU,SAkFdC,MAlFc,GAkFLC,MAAM,IAAI;AACf,WAAKA,MAAL,GAAcA,MAAd;AACH,KApFa;;AAAA,SAqFdC,OArFc,GAqFJ,MAAM;AACZN,MAAAA,QAAQ,GAAG,KAAKK,MAAL,CAAYE,aAAZ,EAAX,CADY,CAEZ;;AACAN,MAAAA,UAAU,GAAGJ,OAAb;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CR,UAA1C;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCT,QAAxC,EALY,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,UAAIU,YAAY,GAAC;AACbC,QAAAA,KAAK,EAACX,QADO,CAEb;AAEA;;AAJa,OAAjB;AAOAF,MAAAA,QAAQ,GAAGT,QAAQ,CAACS,QAAT,EAAX;AACAC,MAAAA,OAAO,GAAGD,QAAQ,CAACc,GAAT,CAAa,iBAAb,CAAV;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCV,OAAhC;AACAA,MAAAA,OAAO,CAACc,IAAR,CAAaH,YAAb,EAA2BI,IAA3B,CAAiCC,GAAD,IAAS;AACrCP,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBM,GAAlB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAFqC,CAGrC;AACD,OAJH,EAjCY,CAuCZ;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA3Ia;;AAEV,SAAKO,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,GAAG;AACX,SAAKG,QAAL,CAAc;AACZJ,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,KAAd,EAEG,KAAKG,YAFR;AAGH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,SAAKJ,YAAL;AACH;;AAGDE,EAAAA,YAAY,GAAG;AAEXZ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKO,KAAL,CAAWC,SAArC;;AAEA,QAAI,KAAKD,KAAL,CAAWC,SAAf,EAA0B;AAC1BxB,MAAAA,WAAW,CAAC8B,KAAZ;;AACA9B,MAAAA,WAAW,CAAC+B,KAAZ,GAAoB,MAAM;AACtBhB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAhB,QAAAA,WAAW,CAAC8B,KAAZ;AACH,OAHD;AAKC,KAPD,MAOO;AACP9B,MAAAA,WAAW,CAACgC,IAAZ;;AACAhC,MAAAA,WAAW,CAAC+B,KAAZ,GAAoB,MAAM;AACtBhB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,OAFD;AAGC;;AAEDhB,IAAAA,WAAW,CAACiC,OAAZ,GAAsB,MAAM;AAC5BlB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACC,KAFD;;AAIA,QAAIkB,eAAe,GAAG,EAAtB;;AACAlC,IAAAA,WAAW,CAACmC,QAAZ,GAAuBC,KAAK,IAAI;AAChC;AAEA,WAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,WAAnB,EAAgCD,CAAC,GAAGD,KAAK,CAACG,OAAN,CAAcC,MAAlD,EAA0DH,CAAC,EAA3D,EAA+D;AAC3D,cAAMI,UAAU,GAAGL,KAAK,CAACG,OAAN,CAAcF,CAAd,EAAiB,CAAjB,EAAoBI,UAAvC;AACA,YAAIL,KAAK,CAACG,OAAN,CAAcF,CAAd,EAAiBK,OAArB,EAA8BR,eAAe,IAAIO,UAAU,GAAG,GAAhC,CAF6B,CAG3D;AACH,OAP+B,CAQhC;;;AACAE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CX,eAA7C,CATgC,CAYhC;;AAEA,YAAMY,aAAa,GAAGZ,eAAe,CAACa,KAAhB,CAAsB,GAAtB,CAAtB;AACA3C,MAAAA,OAAO,GAAG0C,aAAa,CAACE,KAAd,CAAoB,CAAC,CAArB,EAAwB,CAAC,CAAzB,CAAV;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,OAAvB;;AAEA,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,MAAf,IAAyBA,OAAO,CAAC,CAAD,CAAP,KAAe,WAA5C,EAAwD;AACpDJ,QAAAA,WAAW,CAACgC,IAAZ;;AACAhC,QAAAA,WAAW,CAAC+B,KAAZ,GAAoB,MAAM;AAC1BhB,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,gBAAMiC,SAAS,GAAGH,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2BE,IAA3B,CAAgC,GAAhC,CAAlB;AACAP,UAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CI,SAA7C;AACC,SAJD;;AAKAlC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BiC,SAA5B;AACH;AACA,KA3BD,CAvBW,CAoDX;;;AAEAjD,IAAAA,WAAW,CAACmD,OAAZ,GAAsBf,KAAK,IAAI;AAC/BrB,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCoB,KAAK,CAACgB,KAAtD;AACC,KAFD;AAIH,GAhFsC,CAkFvC;;;AA6DA;AAEA;AACA;AACA;AACA;AAEA;AAEAC,EAAAA,MAAM,GAAI;AAEN,UAAMC,gBAAgB,GAAG;AACzBC,MAAAA,KAAK,EAAE,IADkB;AAEzBC,MAAAA,MAAM,EAAE,IAFiB;AAGzBC,MAAAA,UAAU,EAAE;AAHa,KAAzB;AAMA,WAEA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,KADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,GAAG,EAAE,KAAK9C,MAHd;AAII,MAAA,gBAAgB,EAAC,YAJrB;AAKI,MAAA,KAAK,EAAE,GALX;AAMI,MAAA,gBAAgB,EAAE2C,gBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAYI;AAAK,MAAA,KAAK,EAAEI,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,KAAK,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAZJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,KAAK9C,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CApBJ,CADJ,CADJ,CAFA;AAgCH;;AAhMsC;;AAmM3C,eAAeJ,YAAf,C,CAEA;;AAEA,MAAMmD,MAAM,GAAG;AACXF,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,SAAS,EAAE,QAJF;AAKTC,IAAAA,OAAO,EAAE,KALA;AAMTV,IAAAA,KAAK,EAAE,OANE;AAOTC,IAAAA,MAAM,EAAE;AAPC,GADA;AAUXU,EAAAA,MAAM,EAAE;AACNX,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE,MAFF;AAGNW,IAAAA,UAAU,EAAE,WAHN;AAINC,IAAAA,YAAY,EAAE,KAJR;AAKNC,IAAAA,MAAM,EAAE;AALF,GAVG;AAiBXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,MAAM,EAAE,gBAFD;AAGPP,IAAAA,OAAO,EAAE,KAHF;AAIPI,IAAAA,MAAM,EAAE,KAJD;AAKPd,IAAAA,KAAK,EAAE;AALA,GAjBE;AAwBXI,EAAAA,KAAK,EAAE;AACLY,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,MAAM,EAAE,gBAFH;AAGLP,IAAAA,OAAO,EAAE,KAHJ;AAILI,IAAAA,MAAM,EAAE,KAJH;AAKLd,IAAAA,KAAK,EAAE;AALF;AAxBI,CAAf;MAiCUG,S,GAAsCE,M,CAAtCF,S;MAAWQ,M,GAA2BN,M,CAA3BM,M;MAAQI,O,GAAmBV,M,CAAnBU,O;MAASX,K,GAAUC,M,CAAVD,K","sourcesContent":["'use strict'\r\nimport React, { Component } from 'react';\r\n// import React from 'react';\r\nimport './App.css';\r\nimport Webcam from \"react-webcam\";\r\nimport Popup from \"reactjs-popup\";\r\nimport * as firebase from 'firebase';\r\n\r\n//------------------------SPEECH RECOGNITION-----------------------------\r\n\r\nconst SpeechRecognition = typeof window !== 'undefined' && ( window.SpeechRecognition || window.webkitSpeechRecognition )\r\nconst recognition = new SpeechRecognition()\r\nrecognition.continous = true\r\nrecognition.interimResults = true\r\nrecognition.lang = 'hi-IN'\r\n\r\nlet stopCmd;\r\nlet database;\r\nlet dbimage;\r\nlet imageSrc;\r\nlet myrecorded;\r\n\r\n// function storeDemo () {\r\n//     console.log(\"Yes IN FUNCTION\")\r\n//     dbimage\r\n//     .set(imageSrc)\r\n//     .then(success => {\r\n//        console.log(\"Yes successs\")\r\n//       })\r\n//         .catch(err => {\r\n//           console.log(err);\r\n//         //   showMessage(\"Some error occurred\");\r\n//         });\r\n// }\r\n\r\nclass Bothindialog extends React.Component {\r\n    // -----------Speech--------------\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          listening: false\r\n        }\r\n        this.toggleListen = this.toggleListen.bind(this)\r\n        this.handleListen = this.handleListen.bind(this)\r\n    }\r\n\r\n    toggleListen() {\r\n        this.setState({\r\n          listening: !this.state.listening\r\n        }, this.handleListen)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.toggleListen();\r\n    }\r\n\r\n    \r\n    handleListen() {\r\n\r\n        console.log('listening?', this.state.listening)\r\n\r\n        if (this.state.listening) {\r\n        recognition.start()\r\n        recognition.onend = () => {\r\n            console.log(\"...continue listening...\")\r\n            recognition.start()\r\n        }\r\n\r\n        } else {\r\n        recognition.stop()\r\n        recognition.onend = () => {\r\n            console.log(\"Stopped listening per click\")\r\n        }\r\n        }\r\n\r\n        recognition.onstart = () => {\r\n        console.log(\"Listening!\")\r\n        }\r\n\r\n        let finalTranscript = ''\r\n        recognition.onresult = event => {\r\n        // let interimTranscript = ''\r\n\r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n            const transcript = event.results[i][0].transcript;\r\n            if (event.results[i].isFinal) finalTranscript += transcript + ' ';\r\n            // else interimTranscript += transcript;\r\n        }\r\n        // document.getElementById('interim').innerHTML = interimTranscript\r\n        document.getElementById('final').innerHTML = finalTranscript\r\n       \r\n\r\n        //-------------------------COMMANDS------------------------------------\r\n\r\n        const transcriptArr = finalTranscript.split(' ')\r\n        stopCmd = transcriptArr.slice(-3, -1)\r\n        console.log('stopCmd', stopCmd)\r\n\r\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\r\n            recognition.stop()\r\n            recognition.onend = () => {\r\n            console.log('Stopped listening per command')\r\n            const finalText = transcriptArr.slice(0, -3).join(' ')\r\n            document.getElementById('final').innerHTML = finalText\r\n            }\r\n            console.log(\"FINAL TEXT ::\",finalText)\r\n        }\r\n        }\r\n        \r\n        //-----------------------------------------------------------------------\r\n        \r\n        recognition.onerror = event => {\r\n        console.log(\"Error occurred in recognition: \" + event.error)\r\n        }\r\n\r\n    }\r\n\r\n    //---------------------------------IMAGE CAPTURE----------------------------------------------\r\n\r\n    setRef = webcam => {\r\n        this.webcam = webcam;\r\n    };\r\n    capture = () => {\r\n        imageSrc = this.webcam.getScreenshot();\r\n        // alert(imageSrc);\r\n        myrecorded = stopCmd;\r\n        console.log(\"LETS THE CHECK LISTNER :: \", myrecorded);\r\n        console.log(\"LETS THE CHECK Image :: \", imageSrc);\r\n       \r\n        // writeUserData(email,fname,lname) {\r\n        //     // database = firebase.database();\r\n        //     firebase.database().ref('incometax-111d6/').push({\r\n        //         image,\r\n        //         speech\r\n        //     }).then((data)=>{\r\n        //         //success callback\r\n        //         console.log('data ' , data)\r\n        //     }).catch((error)=>{\r\n        //         //error callback\r\n        //         console.log('error ' , error)\r\n        //     })\r\n        // }\r\n\r\n        // image = [\"image\"]\r\n\r\n        var complainData={\r\n            image:imageSrc,\r\n            // speech:myrecorded\r\n\r\n            // description:this.authForm.value.description,\r\n          \r\n          } \r\n        database = firebase.database();\r\n        dbimage = database.ref(\"incometax-111d6\");\r\n        console.log(\"MY DB IMAGE :: \" , dbimage);\r\n        dbimage.push(complainData).then((val) => {\r\n            console.log(\"val\",val);\r\n            console.log(\"Sccess data\");\r\n            // this.navCtrl.push(ComplaintPage);\r\n          });\r\n\r\n        // dbimage.push(\"value\", snap => {\r\n            \r\n        //     // const val = snap.val();\r\n        //     console.log(\"IN B\")\r\n        //     storeDemo();\r\n\r\n        // });\r\n\r\n        // dbimage.then((data)=>{\r\n        //     //success callback\r\n        //     console.log('data ' , data)\r\n        // }).catch((error)=>{\r\n        //     //error callback\r\n        //     console.log('error ' , error)\r\n        // })\r\n    };\r\n\r\n    // genrateIncometax (){\r\n       \r\n    //     const imageSrc = this.webcam.getScreenshot();\r\n    //     const mylistner =  this.state.listening;\r\n    //     console.log(\"LETS THE CHECK LISTNER :: \", mylistner);\r\n    //     alert(imageSrc);\r\n\r\n    // }\r\n\r\n    render () {\r\n    \r\n        const videoConstraints = {\r\n        width: 1280,\r\n        height: 1000,\r\n        facingMode: \"user\"\r\n        };\r\n    \r\n        return (\r\n        \r\n        <div className=\"popup\">\r\n            <div className='popup_inner'>\r\n                <div className='App'>\r\n                    <div>\r\n                    <Webcam\r\n                        audio={false}\r\n                        height={250}\r\n                        ref={this.setRef}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        width={250}\r\n                        videoConstraints={videoConstraints}/>\r\n                    </div>\r\n                \r\n\r\n                    <div style={container}>\r\n                        {/* <button id='microphone-btn' style={button} onClick={this.toggleListen} />\r\n                        <div id='interim' style={interim}></div>\r\n                        <div id='final' style={final}></div> */}\r\n\r\n                        <div id='final' style={final}></div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <button onClick={this.capture}>Capture photo</button>\r\n                    {/* <button onClick={this.genrateIncometax}>Capture photo</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bothindialog;\r\n\r\n//-------------------------CSS------------------------------------\r\n\r\nconst styles = {\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      textAlign: 'center',\r\n      padding: '1em',\r\n      width: '380px',\r\n      height: '50px'\r\n    },\r\n    button: {\r\n      width: '60px',\r\n      height: '60px',\r\n      background: 'lightblue',\r\n      borderRadius: '50%',\r\n      margin: '6em 0 2em 0'\r\n    },\r\n    interim: {\r\n      color: 'gray',\r\n      border: '#ccc 1px solid',\r\n      padding: '1em',\r\n      margin: '1em',\r\n      width: '300px'\r\n    },\r\n    final: {\r\n      color: 'black',\r\n      border: '#ccc 1px solid',\r\n      padding: '1em',\r\n      margin: '1em',\r\n      width: '300px'\r\n    }\r\n  }\r\n  \r\n  const { container, button, interim, final } = styles\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}